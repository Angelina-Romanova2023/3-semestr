import numpy as np
import matplotlib.pyplot as plt

# Определяем функцию
def f(x):
    return x**2

# Отрезок
a, b = -2, 2

# Разбиваем отрезок на 100 частей
x_values = np.linspace(a, b, 100)
y_values = f(x_values)

plt.figure(figsize=(8, 6))
plt.plot(x_values, y_values, label='f(x) = x^2')
plt.title('График функции f(x) = x^2', fontsize=16)
plt.xlabel('x', fontsize=14)
plt.ylabel('f(x)', fontsize=14)
plt.legend(fontsize=12)
plt.grid(True)
plt.show()

plt.figure(figsize=(8, 6))
plt.scatter(x_values, y_values, marker='o', color=(0.8, 0.2, 0.2))  # RGB цвет (красный)
plt.title('Точечный график функции f(x) = x^2', fontsize=16)
plt.xlabel('x', fontsize=14)
plt.ylabel('f(x)', fontsize=14)
plt.grid(True, color='gray', alpha=0.5)
plt.show()

# Генерация выборок
uniform_sample = np.random.uniform(0, 1, 1000)
normal_sample = np.random.normal(0, 1, 1000)

plt.figure(figsize=(10, 5))

# Гистограмма для равномерного распределения
plt.subplot(1, 2, 1)
plt.hist(uniform_sample, bins=30, color='blue', alpha=0.7)
plt.title('Равномерное распределение', fontsize=14)
plt.xlabel('Значение', fontsize=12)
plt.ylabel('Частота', fontsize=12)

# Гистограмма для нормального распределения
plt.subplot(1, 2, 2)
plt.hist(normal_sample, bins=30, color='red', alpha=0.7)
plt.title('Нормальное распределение', fontsize=14)
plt.xlabel('Значение', fontsize=12)
plt.ylabel('Частота', fontsize=12)

plt.tight_layout()
plt.show()

# Генерация выборки из равномерного распределения
sample = np.random.randint(1, 5, 50)

# Подсчет частот
counts = np.bincount(sample)[1:]  # Игнорируем нулевой элемент

# Метки для диаграмм
labels = [str(i) for i in range(1, 5)]

# Цвета для диаграмм
colors = ['red', 'green', 'blue', 'yellow']

# Круговая диаграмма
plt.figure(figsize=(8, 6))
plt.pie(counts, labels=labels, colors=colors, autopct='%1.1f%%')
plt.title('Круговая диаграмма', fontsize=16)
plt.show()

# Столбчатая диаграмма
plt.figure(figsize=(8, 6))
plt.bar(labels, counts, color=colors)
plt.title('Столбчатая диаграмма', fontsize=16)
plt.xlabel('Число', fontsize=14)
plt.ylabel('Частота', fontsize=14)
plt.show()

from mpl_toolkits.mplot3d import Axes3D

# Создаем сетку точек
x = np.linspace(-2, 2, 100)
y = np.linspace(-2, 2, 100)
X, Y = np.meshgrid(x, y)
Z = X**2 + Y**2  # Пример функции с двумя переменными

# Построение графика
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, Z, color='blue')
ax.set_title('Трехмерный график функции f(x, y) = x^2 + y^2', fontsize=14)
ax.set_xlabel('x', fontsize=12)
ax.set_ylabel('y', fontsize=12)
ax.set_zlabel('f(x, y)', fontsize=12)
plt.show()

fig, axs = plt.subplots(2, 2, figsize=(12, 10))

# График из пункта 2
axs[0, 0].plot(x_values, y_values, label='f(x) = x^2')
axs[0, 0].set_title('График функции f(x) = x^2', fontsize=12)
axs[0, 0].set_xlabel('x', fontsize=10)
axs[0, 0].set_ylabel('f(x)', fontsize=10)
axs[0, 0].legend(fontsize=8)
axs[0, 0].grid(True)

# Точечный график из пункта 3
axs[0, 1].scatter(x_values, y_values, marker='o', color=(0.8, 0.2, 0.2))
axs[0, 1].set_title('Точечный график функции f(x) = x^2', fontsize=12)
axs[0, 1].set_xlabel('x', fontsize=10)
axs[0, 1].set_ylabel('f(x)', fontsize=10)
axs[0, 1].grid(True, color='gray', alpha=0.5)

# Круговая диаграмма из пункта 5
axs[1, 0].pie(counts, labels=labels, colors=colors, autopct='%1.1f%%')
axs[1, 0].set_title('Круговая диаграмма', fontsize=12)

# Трехмерный график из пункта 6
ax = fig.add_subplot(2, 2, 4, projection='3d')
ax.plot_surface(X, Y, Z, color='blue')
ax.set_title('Трехмерный график функции f(x, y) = x^2 + y^2', fontsize=12)
ax.set_xlabel('x', fontsize=10)
ax.set_ylabel('y', fontsize=10)
ax.set_zlabel('f(x, y)', fontsize=10)

# Заголовок сетки
fig.suptitle('Сетка графиков', fontsize=16)

plt.tight_layout()
plt.show()

# Список стилей для проверки
styles = ['seaborn-darkgrid', 'ggplot', 'bmh']

for style in styles:
    plt.style.use(style)
    
    fig, axs = plt.subplots(2, 2, figsize=(12, 10))

    # График из пункта 2
    axs[0, 0].plot(x_values, y_values, label='f(x) = x^2')
    axs[0, 0].set_title('График функции f(x) = x^2', fontsize=12)
    axs[0, 0].set_xlabel('x', fontsize=10)
    axs[0, 0].set_ylabel('f(x)', fontsize=10)
    axs[0, 0].legend(fontsize=8)
    axs[0, 0].grid(True)

    # Точечный график из пункта 3
    axs[0, 1].scatter(x_values, y_values, marker='o', color=(0.8, 0.2, 0.2))
    axs[0, 1].set_title('Точечный график функции f(x) = x^2', fontsize=12)
    axs[0, 1].set_xlabel('x', fontsize=10)
    axs[0, 1].set_ylabel('f(x)', fontsize=10)
    axs[0, 1].grid(True, color='gray', alpha=0.5)

    # Круговая диаграмма из пункта 5
    axs[1, 0].pie(counts, labels=labels, colors=colors, autopct='%1.1f%%')
    axs[1, 0].set_title('Круговая диаграмма', fontsize=12)

    # Трехмерный график из пункта 6
    ax = fig.add_subplot(2, 2, 4, projection='3d')
    ax.plot_surface(X, Y, Z, color='blue')
    ax.set_title('Трехмерный график функции f(x, y) = x^2 + y^2', fontsize=12)
    ax.set_xlabel('x', fontsize=10)
    ax.set_ylabel('y', fontsize=10)
    ax.set_zlabel('f(x, y)', fontsize=10)

    # Заголовок сетки
    fig.suptitle(f'Сетка графиков со стилем: {style}', fontsize=16)

    plt.tight_layout()
    plt.show()
    
    
